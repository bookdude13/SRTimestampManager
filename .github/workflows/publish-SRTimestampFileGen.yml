name: Publish SRTimestampFileGen

on:
  workflow_dispatch:

  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
env:
#  SOLUTION_NAME: SRTimestampManager.sln
  PROJECT_NAME: SRTimestampFileGen
  PROJECT_ROOT: ./SRTimestampFileGen
#  TEST_PROJECT_ROOT: ./SRTimestampFileGenTest
  DOTNET_VERSION: '8.0.x'

jobs:

  build:
    strategy:
      matrix:
        include:
          # See https://learn.microsoft.com/en-us/dotnet/core/rid-catalog#known-rids
          - os: windows-latest
            build_target: win-x64
          - os: macos-latest
            build_target: osx-x64
#          - os: macos-latest
#            build_target: osx-arm64
          - os: ubuntu-latest
            build_target: linux-x64
#          - os: ubuntu-latest
#            build_target: linux-arm64

    runs-on: ${{ matrix.os }}  # For a list of available runner types, refer to
                               # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

#    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
#    - name: Setup MSBuild.exe
#      uses: microsoft/setup-msbuild@v2

    # Publish
    - name: dotnet publish
      run: dotnet publish -c Release --self-contained -r ${{ matrix.build_target }} -o './publish/App_Data/Jobs/Triggered/${{ env.PROJECT_NAME }}-${{ matrix.build_target }}' ${{ env.PROJECT_ROOT }}
    
    # Rename exe
    - name: Rename Output .exe
      shell: pwsh # Supported on all platforms
      run: Move-Item -Path './publish/App_Data/Jobs/Triggered/${{ env.PROJECT_NAME }}-${{ matrix.build_target }}/${{ env.PROJECT_NAME }}.exe' -Destination './publish/App_Data/Jobs/Triggered/${{ env.PROJECT_NAME }}-${{ matrix.build_target }}/${{ env.PROJECT_NAME }}_${{ matrix.build_target }}.exe'
      
    # Rename non-exe
    - name: Rename Output 'nix
      shell: pwsh # Supported on all platforms
      run: Move-Item -Path './publish/App_Data/Jobs/Triggered/${{ env.PROJECT_NAME }}-${{ matrix.build_target }}/${{ env.PROJECT_NAME }}' -Destination './publish/App_Data/Jobs/Triggered/${{ env.PROJECT_NAME }}-${{ matrix.build_target }}/${{ env.PROJECT_NAME }}_${{ matrix.build_target }}'
    
    # Upload
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PROJECT_NAME }}-${{ matrix.build_target }}
        path: |
          ./publish/App_Data/Jobs/Triggered/${{ env.PROJECT_NAME }}-${{ matrix.build_target }}/*
          !./publish/**/*.pdb
        overwrite: true
        if-no-files-found: 'error'
        retention-days: 1 # This is meant for me to download and set up a release, not long-term downloading
  
#  assemble-release:
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Get win-x64
#        uses: actions/download-artifact@v4
#        with:
#          name: ${{ env.PROJECT_NAME }}-win-x64
#          merge-multiple: true
#      - name: Get osx-x64
#        uses: actions/download-artifact@v4
#        with:
#          name: ${{ env.PROJECT_NAME }}-osx-x64
#          merge-multiple: true
#      - name: Get osx-x64
#        uses: actions/download-artifact@v4
#        with:
#          name: ${{ env.PROJECT_NAME }}-osx-x64
#          merge-multiple: true
